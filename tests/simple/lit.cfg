# -*- Python -*-

import os
import sys
import lit.formats
import shutil
import glob

# name: The name of this test suite.
config.name = 'Source code analysis (single core)'

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external=True)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.py']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = config.test_source_root

# Removing Output directories
singlecore_tests = glob.glob(os.path.join(config.test_source_root, "*", "Output*"))
singlecore_tests += glob.glob(os.path.join(config.test_source_root, "*", "*", "Output*"))
for test in singlecore_tests:
  try:
    shutil.rmtree(test)
    print("Deleted " + test)
  except Exception as e:
    print("Cannot delete " + test)

config.target_triple = '(unused)'

config.excludes = ['checkresult.py']
                  
ccd_path = os.path.join(config.test_source_root, os.pardir, os.pardir, os.pardir, "bin", "ccd")
new_ccd_path = os.path.join(config.test_source_root, os.pardir, os.pardir, os.pardir, "bin", "new_ccd")
diff_path = os.path.join(config.test_source_root, os.pardir, os.pardir, os.pardir, "bin", "diff")

# This path is relative because it is used in detected clones files.
test_runner = os.path.join(config.test_source_root, os.pardir, "test_runner", "test_runner")
pdg_root_dir = os.path.join(config.test_source_root, os.pardir, "PDGs")

simple_arithmetic_pdg = os.path.join(os.pardir, os.pardir, "PDGs", "simple_arithmetic", "pdg")
extended_simple_arithmetic_pdg = os.path.join(os.pardir, os.pardir, "PDGs", "extended_simple_arithmetic", "pdg")
simple_clones_pdg = os.path.join(os.path.dirname(__file__), "simple_clones", "PDGs")

openssl_1_0_2t_module_list = os.path.join(pdg_root_dir, "openssl_1_0_2t", "modules.list")
openssl_1_1_1d_module_list = os.path.join(pdg_root_dir, "openssl_1_1_1d", "modules.list")
c_ares_1_15_0_module_list = os.path.join(pdg_root_dir, "c_ares_1_15_0", "modules.list")
c_ares_1_18_1_module_list = os.path.join(pdg_root_dir, "c_ares_1_18_1", "modules.list")
rsync_3_1_3_module_list = os.path.join(pdg_root_dir, "rsync_3_1_3", "modules.list")
wget_1_20_3_module_list = os.path.join(pdg_root_dir, "wget_1_20_3", "modules.list")
openssh_8_1_p1_module_list = os.path.join(pdg_root_dir, "openssh_8_1_p1", "modules.list")

config.substitutions.append(('%{python}', sys.executable))
config.substitutions.append(('%{ccd}', ccd_path))
config.substitutions.append(('%{new_ccd}', new_ccd_path))
config.substitutions.append(('%{diff}', diff_path))
config.substitutions.append(('%{test_runner}', test_runner))
config.substitutions.append(('%{simple_arithmetic_pdg}', simple_arithmetic_pdg))
config.substitutions.append(('%{simple_clones_pdg}', simple_clones_pdg))
config.substitutions.append(('%{extended_simple_arithmetic_pdg}', extended_simple_arithmetic_pdg))

config.substitutions.append(('%{openssl_1_0_2t_module_list}', openssl_1_0_2t_module_list))
config.substitutions.append(('%{openssl_1_1_1d_module_list}', openssl_1_1_1d_module_list))
config.substitutions.append(('%{c_ares_1_15_0_module_list}', c_ares_1_15_0_module_list))
config.substitutions.append(('%{c_ares_1_18_1_module_list}', c_ares_1_18_1_module_list))
config.substitutions.append(('%{rsync_3_1_3_module_list}', rsync_3_1_3_module_list))
config.substitutions.append(('%{wget_1_20_3_module_list}', wget_1_20_3_module_list))
config.substitutions.append(('%{openssh_8_1_p1_module_list}', openssh_8_1_p1_module_list))

